/*
 * Copyright 2014-2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


plugins {
    id 'nebula.plugin-plugin' version '15.0.1'
    id 'java-library'
}

description 'Test harness for Gradle plugins. Hopefully retiring in favor of Gradle TestKit'

contacts {
    'justin@halfempty.org' {
        moniker 'Justin Ryan'
        github 'quidryan'
    }
    'rob.spieldenner@gmail.com' {
        moniker 'Rob Spieldenner'
        github 'rspieldenner'
    }
}

java {
    registerFeature('groovy2') {
        usingSourceSet(sourceSets.main)
        capability(project.group.toString(), project.name, project.version.toString())
    }
}

configurations {
    commonApi
    ['apiElements', 'runtimeElements'].each { configuration ->
        it[configuration].attributes {
            attribute(Attribute.of("nebula.plugins.gradle.groovy-version", Integer.class), 3)
        }
    }
    groovy2Api {
       extendsFrom(commonApi)
    }
    api {
        extendsFrom(commonApi)
    }
}

dependencies {
    implementation gradleTestKit()
    commonApi 'com.google.guava:guava:19.0'
    commonApi 'commons-io:commons-io:2.5'
    groovy2Api ('org.spockframework:spock-core:1.3-groovy-2.4')  {
        exclude group: 'org.codehaus.groovy'
    }
    api('org.spockframework:spock-core:2.0-M4-groovy-3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    api 'org.spockframework:spock-junit4:2.0-M4-groovy-3.0'
    commonApi 'cglib:cglib-nodep:3.2.2'
    commonApi 'org.objenesis:objenesis:2.4'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
}

afterEvaluate {
    publishing {
        publications {
            publications.withType(org.gradle.api.publish.maven.MavenPublication) { MavenPublication publication ->
                publication.versionMapping { VersionMappingStrategy versionMappingStrategy ->
                    versionMappingStrategy.allVariants() {
                        usePublishedVersions = false
                    }
                }
            }
        }
    }
}

publishPlugins.enabled = false
